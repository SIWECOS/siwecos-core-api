swagger: "2.0"
info:
  version: "0.0.2"
  title: Siwecos Core Api
# during dev, should point to your local machine
host: coreapi.dev
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /scan/start:
    x-swagger-router-controller: scan
    post:
      description: Api endpoint for start scan (nameserver resolution in api call). All scans, defined in token are triggered. if dangerlevel is not defined, 0 is given.
      # used as the method name of the controller
      operationId: scanStart
      parameters:
        - in: header
          name: siwecosToken
          type: string
          required: true
        - in: body
          required: true
          name: scan
          description: Details about the scan that shall be started
          schema: 
            type: object
            required:
            - url
            properties:
              url:
                type: string
              dangerLevel:
                type: integer
                minimum: 0
                maximum: 10
              callbackurls:
                type: array
                items:
                  type: string
              
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/scanStartResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /scan/status:
    x-swagger-router-controller: scan
    get:
      description: Get the actual state of the latest scan
      # used as the method name of the controller
      operationId: scanStatus
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      - in: query
        required: true
        name: url
        type: string
              
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/scanStatusResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /scan/result:
    x-swagger-router-controller: scan
    get:
      description: Gets the last scan result for a specified domain
      operationId: scanResult
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      - in: query
        required: true
        name: url
        type: string
        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/scanResultResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /scan/result/raw:
    x-swagger-router-controller: scan
    get:
      description: Gets the last finished scan result in raw format for a specified domain
      operationId: scanRawResult
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      - in: query
        required: true
        name: url
        type: string
        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/scanRawResultResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  
  /domain/add:
    x-swagger-router-controller: domain
    post:
      description: Adds a domain to an user account
      operationId: domainAdd
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      - in: body
        required: true
        name: domain
        description: Domain info
        schema: 
          type: object
          required:
          - domain
          properties:
            domain:
              type: string
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/addDomainResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
                 
  /domain/verify:
    x-swagger-router-controller: domain
    post:
      description: Verifies a domain ownership
      operationId: domainVerify
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      - in: body
        required: true
        name: domain
        schema: 
          type: object
          required:
          - domain
          properties:
            domain:
              type: string
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/verifyDomainResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /domains:
    x-swagger-router-controller: domain
    get:
      description: domains of current user
      operationId: domainList
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/listDomainsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /domain/remove:
    post:
      description: Removes a domain form a user acocunt
      operationId: domainRemove
      parameters:
      - in: header
        name: siwecosToken
        type: string
        required: true
      - in: body
        required: true
        name: domain
        description: Domain info
        schema: 
          type: object
          required:
          - domain
          properties:
            domain:
              type: string
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/removeDomainResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /token/add:
    post:
      description: Add a new token for a user
      operationId: tokenAdd
      parameters:
      - in: body
        required: true
        name: token
        description: token info
        schema:
          type: object
          required:
          - aclLevel
          - credits
          properties:
            aclLevel:
              type: integer
            credits:
              type: integer
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/addTokenResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /token/revoke:
    post:
      description: Revokes a token
      operationId: tokenRevoke
      parameters:
      - in: body
        required: true
        name: token
        description: token info
        schema:
          type: object
          required:
          - token
          properties:
            token:
              type: string
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/removeTokenResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  /token/status:
    post:
      description: Get a token status
      operationId: tokenStatus
      parameters:
      - in: body
        required: true
        name: token
        description: token info
        schema:
          type: object
          required:
          - token
          properties:
            token:
              type: string
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/tokenStatusResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
            
            
  /token/setcredits:
    post:
      description: Sets the remaining credits for a token, limited to master token
      operationId: tokenSetCredits
      parameters:
      - in: body
        required: true
        name: token
        description: token info
        schema:
          type: object
          required:
          - token
          - credits
          properties:
            token:
              type: string
            credits:
              type: integer
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/tokenSetCreditsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"      

# complex objects have schema definitions
definitions:
  listDomainsResponse:
    properties:
      domains:
        type: array
        items:
          $ref: "#/definitions/Domain"
  
  tokenSetCreditsResponse:
    properties:
      message:
        type: string
  
  addTokenResponse:
    properties:
      token:
        type: string

  removeTokenResponse:
    properties:
      message:
        type: string
        
        
  tokenStatusResponse:
    properties:
      credits:
        type: integer
      aclLevel:
        type: integer
      active:
        type: boolean
        description: We are using soft-deletes for tokens

  verifyDomainResponse:
    properties:
      message:
        type: string

  addDomainResponse:
    properties:
      message:
        type: string
      domainToken:
        type: string
      verificationStatus:
        type: boolean
      domainId:
        type: integer

  removeDomainResponse:
    properties:
      message:
        type: string
  
  scanStartResponse:
    properties:
      message:
        type: string
      scanId:
        type: integer
      

  scanStatusResponse:
    properties:
      message:
        type: string
      status:
        type: integer
        minimum: 1
        maximum: 3
        description: 1 is queued, 2 is running, 3 is done
      progress:
        type: integer
        minimum: 0
        maximum: 100
    
  scanResultResponse:
    properties:
      score:
        type: integer
        minimum: 0
        maximum: 100
      capped:
        type: boolean
      cappedMessage:
        type: string
      scanStarted:
        type: string
        format: date-time
      scanFinished:
        type: string
        format: date-time
      scanners:
        type: array
        items:
          $ref: "#/definitions/ScannerResult"
                 
  scanRawResultResponse:
    properties:
      scanStarted:
        type: string
        format: date-time
      scanFinished:
        type: string
        format: date-time
      scanners:
        type: array
        items:
          type: object

  ScannerResult:
    properties:
      name:
        type: string
      description:
        type: string
      score:
        type: integer
        minimum: 0
        maximum: 100
      tests:
        type: array
        items:
          $ref: "#/definitions/TestResult"
     
        
  TestResult:
    properties:
      name:
        type: string
      description:
        type: string
      score:
        type: integer
        minimum: 0
        maximum: 100
      scoreType:
        type: string
        enum: [critical, info, warning, bonus, success]
      testDetails:
        type: array
        items:
          $ref: "#/definitions/TestDetail"
      
  TestDetail:
    properties:
      placeholder:
        type: string
        description: language string for i18n
      values:
        type: array
        items:
          type: string
          
  Domain:
    properties:
      domain:
        type: string
      verificationStatus:
        type: boolean
      id:
        type: integer

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
